# name: Build excutable files and release

# on:
#   release:
#     branches:
#       - master
#     types:
#       - tag
#     tags:
#       - v*

# jobs:
#   release_url:
#     name: Build release binary
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Get release
#         id: get_release
#         uses: bruceadams/get-release@v1.2.3
#         env:
#           GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
#       - name:  Output Release URL File
#         uses: actions/upload-release-asset@v1.0.2
#         run: echo "${{ steps.get_release.outputs.upload_url }}" > release_url.txt
#       - name: Save Release URL File for publish
#         uses: actions/upload-artifact@v1
#         with:
#           name: release_url
#           path: release_url.txt

#   build:
#     name: Build packages
#     needs: release_url
#     runs-on: ${{ matrix.os }}
#     strategy:
#       matrix:
#         include:
#           - os: macos-latest
#             TARGET: macos
#             CMD_BUILD: |
#                 pyinstaller --noconfirm --onefile --console --name "hascal"  "src/hascal.py"
#                 cp -r src/hlib dist/	
#                 cp -r examples/ dist/
#                 zip -r dist/hascal.zip dist/
#                 cp dist/hascal.zip hascal-${{ github.ref.split("/")[2] }}-macos.zip
#             OUT_FILE_NAME: hascal-${{ github.ref.split("/")[2]}}-macos.zip
#             ASSET_MIME: application/zip
#           - os: windows-latest
#             TARGET: windows
#             CMD_BUILD: |
#                 pyinstaller --noconfirm --onefile --console --name "hascal"  "src/hascal.py"
#                 xcopy src\hlib dist\hlib /E /H /C /I
#                 xcopy examples dist\examples /E /H /C /I
#                 zip -r dist\hascal.zip dist\hlib dist\examples
#                 cp dist\hascal.zip hascal-${{ github.ref.split("/")[2] }}-windows.zip
#             OUT_FILE_NAME: hascal-${{ github.ref.split("/")[2] }}-windows.zip
#             ASSET_MIME: application/zip
#           - os: ubuntu-latest
#             TARGET: ubuntu
#             CMD_BUILD: |
#                 pyinstaller --noconfirm --onefile --console --name "hascal"  "src/hascal.py"
#                 cp -r src/hlib dist/	
#                 cp -r examples/ dist/
#                 zip -r dist/hascal.zip dist/
#                 cp dist/hascal.zip hascal-${{ github.ref.split("/")[2] }}-ubuntu.zip
#             OUT_FILE_NAME: hascal-${{ github.ref.split("/")[2] }}-ubuntu.zip
#             ASSET_MIME: application/zip

#     steps:
#     - uses: actions/checkout@v1
#     - name: Set up Python 3.8
#       uses: actions/setup-python@v2
#       with:
#         python-version: 3.8
#     - name: Install dependencies
#       run: |
#         python -m pip install pyinstaller
#         pip install -r requirements.txt
#     - name: Build with pyinstaller for ${{matrix.TARGET}}
#       run: ${{matrix.CMD_BUILD}}
#     - name: Load Release URL File from release job
#       uses: actions/download-artifact@v1
#       with:
#         name: release_url
#     - name: Get Release File Name & Upload URL
#       id: get_release_info
#       shell: bash
#       run: |
#         value=`cat release_url/release_url.txt`
#         echo ::set-output name=upload_url::$value
#     - name: Upload Release Asset
#       id: upload-release-asset
#       uses: actions/upload-release-asset@v1
#       env:
#         GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
#       with:
#         upload_url: ${{ steps.get_release_info.outputs.upload_url }}
#         asset_path: ./dist/${{ matrix.OUT_FILE_NAME}}
#         asset_name: ${{ matrix.OUT_FILE_NAME}}
#         asset_content_type: ${{ matrix.ASSET_MIME}}
